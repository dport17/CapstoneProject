server.py
_#!/usr/bin/env python_
**import** ​ ​os
**import** ​ ​sys
**from** ​ ​io​ ​ **import** ​ ​BytesIO
**import** ​ ​json
**from** ​ ​flask​ ​ **import** ​ ​jsonify​, ​request​, ​Flask
**from** ​ ​flask_cors​ ​ **import** ​ ​CORS​, ​cross_origin
_############################################################################
############ GLOBALS ############
############################################################################_
CPORT​ = ​os​.​environ​.​get​(​'CPORT'​, ​ 18000 ​)
**if** ​ ​ **isinstance** ​(​CPORT​, ​ **str** ​):
​CPORT​ = ​ **int** ​(​CPORT​)
app​ = ​Flask​(__​name__​)
CORS​(​app​)
**def** ​ **UDRI_API** ​(​text​):
​"""UDRI API function that returns an answer to a mattermost user query.
This example simply returns the question asked plus a random answer.
Args:
text (str): the text sent from the /receive_chat endpoint
Returns:
dict:
{
'query': str # original query sent in,
'answer': str # answer to the query
}
"""
​ **from** ​ ​essential_generators​ ​ **import** ​ ​DocumentGenerator


​gen​ = ​DocumentGenerator​()
​response​ = {}
​response​[​'query'​] = ​text
​response​[​'answer'​] = ​gen​.​sentence​()
​ **return** ​ ​response
_############################################################################
############ FLASK ENDPOINTS ############
############################################################################_
@cross_origin​()
@app​.​route​(​'/receive_chat'​, ​methods​=[​'POST'​])
**def** ​ **receive_chat** ​():
​"""
The endpoint for the UDRI server to receive chat messages, encoded as JSON.
Expected input:
{
'text': 'Some text here'
}
"""
​ **print** ​(​request​)
​text​ = ​request​.​json​[​'text'​]
​response​ = ​UDRI_API​(​text​)
​ **return** ​ ​jsonify​(​response​)
**def** ​ **main** ​():
​"""
main( ) function exposed for pip whl build in setup/Make file.
"""
​app​.​run​(​debug​=​True​, ​host​=​'0.0.0.0'​, ​port​=​CPORT​)
**if** ​ __​name__​ == ​'__main__'​:
​main​()


requirements.txt

python==3.
Flask
flask-cors
requests
essential_generators


